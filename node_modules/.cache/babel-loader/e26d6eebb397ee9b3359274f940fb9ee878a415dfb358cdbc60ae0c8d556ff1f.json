{"ast":null,"code":"var _jsxFileName = \"/Users/user/Dropbox/Mac/Downloads/AirBnB (1)/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, useNavigationType, useLocation } from \"react-router-dom\";\nimport AirBnB from \"./pages/AirBnB\";\nimport ConnectWallet from \"./pages/ConnectWallet\";\nimport PLACETOSTAY from \"./pages/PLACETOSTAY\";\nimport { useEffect } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n  const isMobileDevice = useMediaQuery({\n    query: \"(min-device-width: 480px)\"\n  });\n  const isTabletDevice = useMediaQuery({\n    query: \"(min-device-width: 768px)\"\n  });\n  const isLaptop = useMediaQuery({\n    query: \"(min-device-width: 1024px)\"\n  });\n  const isDesktop = useMediaQuery({\n    query: \"(min-device-width: 1200px)\"\n  });\n  const isBigScreen = useMediaQuery({\n    query: \"(min-device-width: 1201px )\"\n  });\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    //TODO: Update meta titles and descriptions below\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/connect-wallet\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/place-to-stay\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n    if (title) {\n      document.title = title;\n    }\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector('head > meta[name=\"description\"]');\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(AirBnB, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/connect-wallet\",\n      element: /*#__PURE__*/_jsxDEV(ConnectWallet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/place-to-stay\",\n      element: /*#__PURE__*/_jsxDEV(PLACETOSTAY, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZUf522rENMNEMSvGIQvjzPefAjQ=\", false, function () {\n  return [useNavigationType, useLocation, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useNavigationType","useLocation","AirBnB","ConnectWallet","PLACETOSTAY","useEffect","useMediaQuery","App","action","location","pathname","isMobileDevice","query","isTabletDevice","isLaptop","isDesktop","isBigScreen","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content"],"sources":["/Users/user/Dropbox/Mac/Downloads/AirBnB (1)/src/App.js"],"sourcesContent":["import {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\";\nimport AirBnB from \"./pages/AirBnB\";\nimport ConnectWallet from \"./pages/ConnectWallet\";\nimport PLACETOSTAY from \"./pages/PLACETOSTAY\";\nimport { useEffect } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  const isMobileDevice = useMediaQuery({\n    query: \"(min-device-width: 480px)\",\n  });\n\n  const isTabletDevice = useMediaQuery({\n    query: \"(min-device-width: 768px)\",\n  });\n\n  const isLaptop = useMediaQuery({\n    query: \"(min-device-width: 1024px)\",\n  });\n\n  const isDesktop = useMediaQuery({\n    query: \"(min-device-width: 1200px)\",\n  });\n\n  const isBigScreen = useMediaQuery({\n    query: \"(min-device-width: 1201px )\",\n  });\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    //TODO: Update meta titles and descriptions below\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/connect-wallet\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/place-to-stay\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<AirBnB />} />\n\n      <Route path=\"/connect-wallet\" element={<ConnectWallet />} />\n\n      <Route path=\"/place-to-stay\" element={<PLACETOSTAY />} />\n    </Routes>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SACEA,MAAM,EACNC,KAAK,EACLC,iBAAiB,EACjBC,WAAW,QACN,kBAAkB;AACzB,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,kBAAkB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,MAAM,GAAGR,iBAAiB,EAAE;EAClC,MAAMS,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,QAAQ,GAAGD,QAAQ,CAACC,QAAQ;EAElC,MAAMC,cAAc,GAAGL,aAAa,CAAC;IACnCM,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGP,aAAa,CAAC;IACnCM,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAME,QAAQ,GAAGR,aAAa,CAAC;IAC7BM,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMG,SAAS,GAAGT,aAAa,CAAC;IAC9BM,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMI,WAAW,GAAGV,aAAa,CAAC;IAChCM,KAAK,EAAE;EACT,CAAC,CAAC;EAEFP,SAAS,CAAC,MAAM;IACd,IAAIG,MAAM,KAAK,KAAK,EAAE;MACpBS,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZH,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,GAAG,EAAE;IACd,IAAIC,eAAe,GAAG,EAAE;;IAExB;IACA,QAAQV,QAAQ;MACd,KAAK,GAAG;QACNS,KAAK,GAAG,EAAE;QACVC,eAAe,GAAG,EAAE;QACpB;MACF,KAAK,iBAAiB;QACpBD,KAAK,GAAG,EAAE;QACVC,eAAe,GAAG,EAAE;QACpB;MACF,KAAK,gBAAgB;QACnBD,KAAK,GAAG,EAAE;QACVC,eAAe,GAAG,EAAE;QACpB;IAAM;IAGV,IAAID,KAAK,EAAE;MACTE,QAAQ,CAACF,KAAK,GAAGA,KAAK;IACxB;IAEA,IAAIC,eAAe,EAAE;MACnB,MAAME,kBAAkB,GAAGD,QAAQ,CAACE,aAAa,CAC/C,iCAAiC,CAClC;MACD,IAAID,kBAAkB,EAAE;QACtBA,kBAAkB,CAACE,OAAO,GAAGJ,eAAe;MAC9C;IACF;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,MAAM;IAAA,wBACL,QAAC,KAAK;MAAC,IAAI,EAAC,GAAG;MAAC,OAAO,eAAE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eAEvC,QAAC,KAAK;MAAC,IAAI,EAAC,iBAAiB;MAAC,OAAO,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eAE5D,QAAC,KAAK;MAAC,IAAI,EAAC,gBAAgB;MAAC,OAAO,eAAE,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEb;AAAC,GA1EQH,GAAG;EAAA,QACKP,iBAAiB,EACfC,WAAW,EAGLK,aAAa,EAIbA,aAAa,EAInBA,aAAa,EAIZA,aAAa,EAIXA,aAAa;AAAA;AAAA,KArB1BC,GAAG;AA2EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}